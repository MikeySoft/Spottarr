name: Docker build
on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
  packages: write
jobs:
  build:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    name: Docker build
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.gen_meta.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Repository Metadata
        id: gen_meta
        run: |
          echo "GITHUB_SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT;
          echo "REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT;
          echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT;
      - name: Add docker metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/mikeysoft/spottarr
          tags: |
            tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},value=${{ steps.gen_meta.outputs.VERSION }},enable={{is_default_branch}}
            type=raw,value=${{ steps.gen_meta.outputs.GITHUB_SHORT_SHA }},enable=${{ github.ref != format('refs/heads/{0}', 'main') }}

      - name: Build and Push
        id: build-and-push-image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64 ,linux/arm64
          file: src/Spottarr.Web/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    permissions:
      contents: write
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Release Tag
        uses: ncipollo/release-action@v1
        env:
          VERSION: ${{ needs.build.outputs.VERSION }}
        with:
          tag: ${{ env.VERSION }}
